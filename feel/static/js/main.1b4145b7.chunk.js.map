{"version":3,"sources":["FeelService.ts","lib/Monaco/MonacoConfigs.ts","lib/Monaco/MonacoEditor.ts","lib/Monaco/MonacoFeelInitializer.ts","lib/FeelInput/FeelInput.tsx","index.tsx"],"names":["FeelService","feelGwt","this","feelExpression","row","col","sortValue","getSuggestions","toArray","filter","value","index","self","indexOf","map","s","kind","Monaco","CompletionItemKind","Function","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","label","insertText","sortText","String","padStart","e","expression","result","evaluate","startsWith","undefined","window","__KIE__FEEL__","org","kie","dmn","feel","client","showcase","FeelJS","console","log","MONACO_FEEL_LANGUAGE","MONACO_FEEL_THEME","FEELMonacoEditor","standaloneEditor","domElement","onChange","onKeyDown","options","onBlur","dispose","createStandaloneEditor","Error","create","language","theme","fontSize","contextmenu","useTabStops","folding","automaticLayout","lineNumbersMinChars","overviewRulerBorder","scrollBeyondLastLine","hideCursorInOverviewRuler","scrollbar","useShadows","minimap","enabled","onDidChangeModelContent","getValue","onDidBlurEditorText","focus","suggestionProvider","__KIE__MONACO__EDITOR__","initializeFeelLanguage","initializeMonacoTheme","initializeFeelTokensProvider","initializeFeelCompletionItemProvider","getEditorBuilder","register","id","defineTheme","base","inherit","rules","token","foreground","fontStyle","colors","setMonarchTokensProvider","tokenizer","root","registerCompletionItemProvider","provideCompletionItems","model","position","completionItems","suggestions","suggestionTypes","suggestion","push","Keyword","defaultSuggestions","items","lineNumber","column","length","FeelInput","monacoContainer","useRef","useEffect","getStandaloneEditor","setValue","withDomElement","current","withOnBlur","withOnChange","withOptions","createEditor","useMemo","className","ref","FeelEditor","useState","setFeelExpression","feelResult","setFeelResult","useCallback","text","getInstance","clientResult","clearTimeout","__KIE__FEEL__THROTTLING___","setTimeout","a","fetch","FEEL_SERVER","URLSearchParams","resp","includes","feelInput","_event","content","lineNumbers","feelOutput","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b4145b7.chunk.js","sourcesContent":["/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Monaco from \"monaco-editor\";\n\ndeclare global {\n  interface Window {\n    __KIE__FEEL__?: FeelService;\n  }\n}\n\ndeclare namespace org {\n  namespace kie {\n    namespace dmn {\n      namespace feel {\n        namespace client {\n          namespace showcase {\n            class FeelJS {\n              getSuggestions: (feelExpression: string, row: number, col: number) => { toArray: () => string[] };\n              evaluate(expression: string): string;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class FeelService {\n  private feelGwt?: org.kie.dmn.feel.client.showcase.FeelJS;\n\n  constructor(feelGwt?: org.kie.dmn.feel.client.showcase.FeelJS) {\n    this.feelGwt = feelGwt;\n  }\n\n  static getInstance() {\n    if (window.__KIE__FEEL__ === undefined) {\n      try {\n        window.__KIE__FEEL__ = new FeelService(new org.kie.dmn.feel.client.showcase.FeelJS());\n      } catch (e) {\n        console.log(\"inst error\");\n        return new FeelService();\n      }\n    }\n    return window.__KIE__FEEL__;\n  }\n\n  getSuggestions(feelExpression: string, row: number, col: number): Monaco.languages.CompletionItem[] {\n    let sortValue = 0;\n    try {\n      const suggestions = this.feelGwt?.getSuggestions(feelExpression, row, col).toArray() || [];\n      return (\n        suggestions\n          .filter((value, index, self) => {\n            return self.indexOf(value) === index;\n          })\n          .map((s) => {\n            return {\n              kind: Monaco.languages.CompletionItemKind.Function,\n              insertTextRules: Monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n              label: s,\n              insertText: s,\n              sortText: String(++sortValue).padStart(5, \"0\"),\n            } as Monaco.languages.CompletionItem;\n          }) || []\n      );\n    } catch (e) {\n      return [];\n    }\n  }\n\n  evaluate(expression: string) {\n    const defaultResult = \"\";\n    let result = \"\";\n\n    try {\n      result = this.feelGwt?.evaluate(expression) || defaultResult;\n    } catch (e) {\n      return defaultResult;\n    }\n\n    if (result === \"Eval error.\" || result.startsWith(\"org.kie.dmn.feel\")) {\n      result = defaultResult;\n    }\n\n    return result;\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Monaco from \"monaco-editor\";\n\nexport const MONACO_FEEL_LANGUAGE = \"feel-language\";\n\nexport const MONACO_FEEL_THEME = \"feel-theme\";\n\nexport const createConfig = (\n  options?: Monaco.editor.IStandaloneEditorConstructionOptions\n): Monaco.editor.IStandaloneEditorConstructionOptions => {\n  return {\n    language: MONACO_FEEL_LANGUAGE,\n    theme: MONACO_FEEL_THEME,\n    fontSize: 15,\n    contextmenu: false,\n    useTabStops: false,\n    folding: false,\n    automaticLayout: true,\n    lineNumbersMinChars: 0,\n    overviewRulerBorder: false,\n    scrollBeyondLastLine: false,\n    hideCursorInOverviewRuler: true,\n    scrollbar: {\n      useShadows: false,\n    },\n    minimap: {\n      enabled: false,\n    },\n\n    ...options,\n  };\n};\n\nexport const tokensConfig = (): Monaco.languages.IMonarchLanguage => {\n  return {\n    tokenizer: {\n      root: [\n        [/(?:true|false)/, \"feel-boolean\"],\n        [/[0-9]+/, \"feel-numeric\"],\n        [/(?:\"(?:.*?)\")/, \"feel-string\"],\n        [/(?:(?:[a-z ]+\\()|(?:\\()|(?:\\)))/, \"feel-function\"],\n        [/(?:if|then|else)/, \"feel-keyword\"],\n        [\n          /(?:for|in|return|if|then|else|some|every|satisfies|instance|of|function|external|or|and|between|not|null)/,\n          \"feel-keyword\",\n        ],\n      ],\n    },\n  };\n};\n\nexport const defaultSuggestions = (): Monaco.languages.CompletionItem[] => {\n  const suggestions: Monaco.languages.CompletionItem[] = [];\n\n  const suggestionTypes = {\n    Snippet: [\n      [\"if\", \"if $1 then\\n\\t$0\\nelse\\n\\t\"],\n      [\"for\", \"for element in $1 return\\n\\t$0\"],\n    ],\n    Function: [\n      // String\n      [\"substring(string, start position, length?)\", \"substring($1, $2, $3)\"],\n      [\"string length(string)\", \"string length($1)\"],\n      [\"upper case(string)\", \"upper case($1)\"],\n      [\"lower case(string)\", \"lower case($1)\"],\n      [\"substring before(string, match)\", \"substring before($1, $2)\"],\n      [\"substring after(string, match)\", \"substring after($1, $2)\"],\n      [\"replace(input, pattern, replacement, flags?)\", \"replace($1, $2, $3, $4)\"],\n      [\"contains(string, match)\", \"contains($1, $2)\"],\n      [\"starts with(string, match)\", \"starts with($1, $2)\"],\n      [\"ends with(string, match)\", \"ends with($1, $2)\"],\n      [\"matches(input, pattern, flags?)\", \"matches($1, $2, $3)\"],\n      [\"split(string, delimiter)\", \"split($1, $2)\"],\n\n      // List\n      [\"list contains(list, element)\", \"list contains($1, $2)\"],\n      [\"count(list)\", \"count($1)\"],\n      [\"min(list)\", \"min($1)\"],\n      [\"max(list)\", \"max($1)\"],\n      [\"sum(list)\", \"sum($1)\"],\n      [\"mean(list)\", \"mean($1)\"],\n      [\"and(list)\", \"and($1)\"],\n      [\"or(list)\", \"or($1)\"],\n      [\"sublist(list, start position, length?)\", \"sublist($1, $2, $3)\"],\n      [\"append(list, item...)\", \"append($1, $2)\"],\n      [\"concatenate(list...)\", \"concatenate($1)\"],\n      [\"insert before(list, position, newItem)\", \"insert before($1, $2, $3)\"],\n      [\"remove(list, position)\", \"remove($1, $2)\"],\n      [\"reverse(list)\", \"remove($1)\"],\n      [\"index of(list, match)\", \"index of($1, $2)\"],\n      [\"union(list...)\", \"union($1)\"],\n      [\"distinct values(list)\", \"distinct values($1)\"],\n      [\"flatten(list)\", \"flatten($1)\"],\n      [\"product(list)\", \"product($1)\"],\n      [\"median(list)\", \"median($1)\"],\n      [\"stddev(list)\", \"stddev($1)\"],\n      [\"mode(list)\", \"mode($1)\"],\n\n      // Number\n      [\"decimal(n, scale)\", \"decimal($1, $2)\"],\n      [\"floor(n)\", \"floor($1)\"],\n      [\"ceiling(n)\", \"ceiling($1)\"],\n      [\"abs(n)\", \"abs($1)\"],\n      [\"modulo(dividend, divisor)\", \"modulo($1, $2)\"],\n      [\"sqrt(number)\", \"sqrt($1)\"],\n      [\"log(number)\", \"log($1)\"],\n      [\"exp(number)\", \"exp($1)\"],\n      [\"odd(number)\", \"odd($1)\"],\n      [\"even(number)\", \"even($1)\"],\n\n      // Boolean\n      [\"not(negand)\", \"not($1)\"],\n    ],\n  };\n\n  for (const suggestion of suggestionTypes.Snippet) {\n    suggestions.push({\n      kind: Monaco.languages.CompletionItemKind.Keyword,\n      insertTextRules: Monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      label: suggestion[0],\n      insertText: suggestion[1],\n    } as Monaco.languages.CompletionItem);\n  }\n\n  for (const suggestion of suggestionTypes.Function) {\n    suggestions.push({\n      kind: Monaco.languages.CompletionItemKind.Function,\n      insertTextRules: Monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      label: suggestion[0],\n      insertText: suggestion[1],\n    } as Monaco.languages.CompletionItem);\n  }\n\n  return suggestions;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Monaco from \"monaco-editor\";\nimport {\n  initializeFeelCompletionItemProvider,\n  initializeMonacoTheme,\n  initializeFeelLanguage,\n  initializeFeelTokensProvider,\n  SuggestionProvider,\n} from \".\";\nimport { createConfig } from \"./MonacoConfigs\";\n\ndeclare global {\n  interface Window {\n    __KIE__MONACO__EDITOR__?: FEELMonacoEditor;\n  }\n}\n\nexport class FEELMonacoEditor {\n  private standaloneEditor?: Monaco.editor.IStandaloneCodeEditor;\n\n  private domElement?: HTMLElement;\n\n  private onChange?: (event: Monaco.editor.IModelContentChangedEvent, content: string) => void;\n\n  private onKeyDown?: (event: Monaco.IKeyboardEvent) => void;\n\n  private options?: Monaco.editor.IStandaloneEditorConstructionOptions;\n\n  private onBlur?: () => void;\n\n  static getEditorBuilder(suggestionProvider?: SuggestionProvider) {\n    if (window.__KIE__MONACO__EDITOR__ === undefined) {\n      initializeFeelLanguage();\n      initializeMonacoTheme();\n      initializeFeelTokensProvider();\n      initializeFeelCompletionItemProvider(suggestionProvider);\n      window.__KIE__MONACO__EDITOR__ = new FEELMonacoEditor();\n    }\n    return window.__KIE__MONACO__EDITOR__;\n  }\n\n  static getStandaloneEditor() {\n    return this.getEditorBuilder().standaloneEditor;\n  }\n\n  static dispose() {\n    this.getEditorBuilder().standaloneEditor?.dispose();\n    this.getEditorBuilder().standaloneEditor = undefined;\n  }\n\n  static isInstantiaded() {\n    return this.getEditorBuilder().standaloneEditor !== undefined;\n  }\n\n  withDomElement(domElement: HTMLElement) {\n    this.domElement = domElement;\n    return this;\n  }\n\n  withOnChange(onChange?: (event: Monaco.editor.IModelContentChangedEvent, content: string) => void) {\n    this.onChange = onChange;\n    return this;\n  }\n\n  withOnBlur(onBlur?: () => void) {\n    this.onBlur = onBlur;\n    return this;\n  }\n\n  withOptions(options?: Monaco.editor.IStandaloneEditorConstructionOptions) {\n    this.options = options;\n    return this;\n  }\n\n  createEditor() {\n    this.dispose();\n    return this.createStandaloneEditor();\n  }\n\n  private dispose() {\n    this.standaloneEditor?.dispose();\n  }\n\n  private createStandaloneEditor() {\n    if (!this.domElement) {\n      throw new Error(\"FEEL Monaco editor cannot be created without a 'domElement'.\");\n    }\n\n    this.standaloneEditor = Monaco.editor.create(this.domElement!, createConfig(this.options));\n\n    if (this.onChange) {\n      this.standaloneEditor.onDidChangeModelContent((e) => this.onChange!(e, this.standaloneEditor?.getValue() || \"\"));\n    }\n\n    if (this.onBlur) {\n      this.standaloneEditor.onDidBlurEditorText(this.onBlur);\n    }\n\n    if (this.onKeyDown) {\n      this.standaloneEditor.onKeyDown(this.onKeyDown);\n    }\n\n    this.standaloneEditor.focus();\n\n    return this.standaloneEditor!;\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Monaco from \"monaco-editor\";\nimport \"monaco-editor/dev/vs/editor/editor.main.css\";\nimport { MONACO_FEEL_LANGUAGE, MONACO_FEEL_THEME, defaultSuggestions, tokensConfig } from \".\";\n\nexport type SuggestionProvider = (\n  feelExpression: string,\n  row: number,\n  col: number\n) => Monaco.languages.CompletionItem[];\n\nexport const initializeFeelLanguage = () => {\n  Monaco.languages.register({ id: MONACO_FEEL_LANGUAGE });\n};\n\nexport const initializeMonacoTheme = () => {\n  Monaco.editor.defineTheme(MONACO_FEEL_THEME, {\n    base: \"vs\",\n    inherit: true,\n    rules: [\n      { token: \"feel-keyword\", foreground: \"26268C\", fontStyle: \"bold\" },\n      { token: \"feel-numeric\", foreground: \"3232E7\" },\n      { token: \"feel-boolean\", foreground: \"26268D\", fontStyle: \"bold\" },\n      { token: \"feel-string\", foreground: \"2A9343\" },\n      { token: \"feel-function\", foreground: \"3232E8\" },\n    ],\n    colors: {\n      \"editorLineNumber.foreground\": \"#000000\",\n    },\n  });\n};\n\nexport const initializeFeelTokensProvider = () => {\n  Monaco.languages.setMonarchTokensProvider(MONACO_FEEL_LANGUAGE, tokensConfig());\n};\n\nexport const initializeFeelCompletionItemProvider = (suggestionProvider?: SuggestionProvider) => {\n  Monaco.languages.registerCompletionItemProvider(MONACO_FEEL_LANGUAGE, {\n    provideCompletionItems: function (model, position) {\n      let completionItems = defaultSuggestions();\n\n      if (suggestionProvider) {\n        const items = suggestionProvider(model.getValue(), position.lineNumber, position.column - 1);\n        if (items.length > 0) {\n          completionItems = items;\n        }\n      }\n\n      return {\n        suggestions: completionItems,\n      };\n    },\n  });\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Monaco from \"monaco-editor\";\nimport * as React from \"react\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport { FEELMonacoEditor, SuggestionProvider } from \"../Monaco\";\n\nexport interface FeelInputProps {\n  enabled: boolean;\n  value?: string;\n  suggestionProvider?: SuggestionProvider;\n  onBlur?: () => void;\n  onChange?: (event: Monaco.editor.IModelContentChangedEvent, content: string) => void;\n  options?: Monaco.editor.IStandaloneEditorConstructionOptions;\n}\n\nexport const FeelInput: React.FunctionComponent<FeelInputProps> = ({\n  enabled,\n  value,\n  suggestionProvider,\n  onBlur,\n  onChange,\n  options,\n}: FeelInputProps) => {\n  const monacoContainer = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    FEELMonacoEditor.getStandaloneEditor()?.setValue(value || \"\");\n  }, [value]);\n\n  useEffect(() => {\n    if (enabled) {\n      FEELMonacoEditor.getEditorBuilder(suggestionProvider)\n        .withDomElement(monacoContainer.current!)\n        .withOnBlur(onBlur)\n        .withOnChange(onChange)\n        .withOptions(options)\n        .createEditor()\n        .setValue(value || \"\");\n    } else {\n      FEELMonacoEditor.dispose();\n    }\n  }, [enabled]);\n\n  return useMemo(\n    () => (\n      <div className=\"feel-input\">\n        <div ref={monacoContainer}></div>\n      </div>\n    ),\n    []\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FeelService } from \"./FeelService\";\nimport \"./index.css\";\nimport { FeelInput } from \"./lib\";\n\nconst FeelEditor = () => {\n  const [feelExpression, setFeelExpression] = useState(\"\");\n  const [feelResult, setFeelResult] = useState(\"\");\n  const suggestionProvider = useCallback((text, row, col) => {\n    return FeelService.getInstance().getSuggestions(text, row, col);\n  }, []);\n\n  useEffect(() => {\n    const clientResult = FeelService.getInstance().evaluate(feelExpression);\n    if (clientResult !== \"\") {\n      setFeelResult(clientResult);\n    }\n\n    window.clearTimeout(window.__KIE__FEEL__THROTTLING___);\n    window.__KIE__FEEL__THROTTLING___ = window.setTimeout(() => {\n      const FEEL_SERVER = \"https://piscine-madame-68280.herokuapp.com\";\n      (async () => {\n        const resp = await fetch(\n          FEEL_SERVER +\n            \"?\" +\n            new URLSearchParams({\n              feel: feelExpression,\n              clientResult,\n            })\n        );\n        const result = await resp.text();\n        if (!result.includes(\"Server Error\")) {\n          setFeelResult(result);\n        }\n      })();\n    }, 500);\n  }, [feelExpression]);\n\n  const feelInput = useMemo(() => {\n    return (\n      <FeelInput\n        enabled={true}\n        suggestionProvider={suggestionProvider}\n        onChange={(_event, content) => {\n          setFeelExpression(content);\n        }}\n        options={{\n          lineNumbers: \"on\",\n        }}\n      />\n    );\n  }, [setFeelExpression, suggestionProvider]);\n\n  const feelOutput = useMemo(() => {\n    return (\n      <div className=\"feel-output\">\n        <h3>FEEL output</h3>\n        {feelResult}\n      </div>\n    );\n  }, [feelResult]);\n\n  return (\n    <>\n      <div className=\"feel-editor\">\n        {feelInput}\n        {feelOutput}\n      </div>\n    </>\n  );\n};\n\ndeclare global {\n  interface Window {\n    __KIE__FEEL__THROTTLING___: number;\n  }\n}\n\nReactDOM.render(<FeelEditor />, document.getElementById(\"feel-editor\"));\n"],"sourceRoot":""}